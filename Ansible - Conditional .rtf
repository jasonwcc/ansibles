{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c100000;}
{\info
{\author Jason}
{\*\copyright Jason 2019}}\paperw11900\paperh16840\margl1440\margr1440\vieww27000\viewh13200\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b\fs36 \cf2 \cb3 \CocoaLigature0 - name: Use when
\b0 \
  hosts: all\
  become: yes\
\
  tasks:\
  - name: shutting down\
    command: /sbin/shutdown -t 120\
    when: ansible_facts['os_family']|lower == 'redhat' \
\

\b - name: Use when with and / or
\b0 \
  hosts: all\
  become: yes\
\
  tasks:\
  - name: shutting down\
    command: /sbin/shutdown -t 120\
    when: (ansible_facts['os_family']|lower == 'redhat' and ansible_facts['distribution_major_version'] > 8)\
\

\b - name: Use multiple criteria with and / or in separate lines
\b0 \
  hosts: all\
  become: yes\
\
  tasks:\
  - name: shutting down\
    command: /sbin/shutdown -t 120\
    when: ansible_facts['os_family']|lower == 'redhat' or\
               ansible_facts['distribution_major_version'] > 8\
\
\

\b - name: Use multiple criteria with and / or in separate lines
\b0 \
  hosts: all\
  become: yes\
\
  tasks:\
  - name: shutting down\
    command: /sbin/shutdown -t 120\
    when: \
     - ansible_facts['os_family']|lower == 'redhat' and\
     - ansible_facts['distribution_major_version']== 6\
\
\

\b - name: Using when with success or fail . Something like if then else statement
\b0 \
  hosts: all\
  become: yes\
\
  tasks:\
  - name: If condition\
    command: cat /tmp/shutdown\
    register: result\
    ignore_errors: yes\
\
  - name: Then statement\
    command: wall "succeeded"\
    when: result is succeeded\
\
  - name: Else statement\
    command: wall "failed"\
    when: result is failed\
; create /tmp/shutdown in one of the managed hosts\
\
\

\b - name: 'Ensure that free space on \{\{ mountname \}\} is grater than 30%'
\b0 \
  become: yes\
  hosts: webservers\
  tasks: \
  #- assert:\
     #that: item.size_available > item.size_total|float * 0.3\
  - debug:\
     msg: 'disk space has reached 70% threshold'\
    when: item.mount == mountname\
    with_items: '\{\{ ansible_mounts \}\}'\
\
run ansible-playbook this.yml -e mountname=/boot\
\
}